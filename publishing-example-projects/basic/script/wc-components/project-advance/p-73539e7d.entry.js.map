{"version":3,"names":["indexCss","Spinner","render","h","class","AV_API_KEY","StockFinder","onFindStocks","e","preventDefault","this","loading","stockName","stockNameInput","value","fetch","then","res","json","searchResults","bestMatches","map","row","name","symbol","catch","err","console","error","onSelectSymbol","wcSymbolSelected","emit","content","onClick","bind","onSubmit","id","type","ref","el","StockPrice","stockSymbolChanged","newValue","oldValue","stockUserInput","stockInputValid","fetchStockPrice","onUserInput","target","trim","onFecthStockPrice","stockSymbol","stockInput","componentWillLoad","log","fetchedPrice","componentDidLoad","componentWillUpdate","componentDidUpdate","disconnectedCallback","onStockSymbolSelected","detail","status","Error","message","hostData","__stencil_render","dataContent","onInput","disabled"],"sources":["./src/components/spinner/index.css?tag=wc-spinner&encapsulation=shadow","./src/components/spinner/index.tsx","./src/global/global.ts","./src/components/stock-finder/index.css?tag=wc-stock-finder&encapsulation=shadow","./src/components/stock-finder/index.tsx","./src/components/stock-price/index.css?tag=wc-stock-price&encapsulation=shadow","./src/components/stock-price/index.tsx"],"sourcesContent":[".lds-ring {\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 80px;\r\n    height: 80px;\r\n}\r\n\r\n.lds-ring div {\r\n    box-sizing: border-box;\r\n    display: block;\r\n    position: absolute;\r\n    width: 64px;\r\n    height: 64px;\r\n    margin: 8px;\r\n    border: 8px solid #3b013b;\r\n    border-radius: 50%;\r\n    animation: lds-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\r\n    border-color: #3b013b transparent transparent transparent;\r\n}\r\n\r\n.lds-ring div:nth-child(1) {\r\n    animation-delay: -0.45s;\r\n}\r\n\r\n.lds-ring div:nth-child(2) {\r\n    animation-delay: -0.3s;\r\n}\r\n\r\n.lds-ring div:nth-child(3) {\r\n    animation-delay: -0.15s;\r\n}\r\n\r\n@keyframes lds-ring {\r\n    0% {\r\n        transform: rotate(0deg);\r\n    }\r\n\r\n    100% {\r\n        transform: rotate(360deg);\r\n    }\r\n}","import { Component, h } from \"@stencil/core\";\r\n\r\n@Component({\r\n    tag: 'wc-spinner',\r\n    styleUrl: './index.css',\r\n    shadow: true,\r\n})\r\nexport class Spinner {\r\n    render() {\r\n        return <div class=\"lds-ring\">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>;\r\n    }\r\n}","export const AV_API_KEY = '32VATWT27K56Q99T';",":host {\r\n    font-family: sans-serif;\r\n    border: 2px solid #3b013b;\r\n    margin: 2rem;\r\n    padding: 1rem;\r\n    display: block;\r\n    width: 20rem;\r\n    max-width: 100%;\r\n}\r\n\r\nform input {\r\n    font: inherit;\r\n    color: #3b013b;\r\n    padding: 0.1rem 0.25rem;\r\n    margin-bottom: 0.5rem;\r\n}\r\n\r\nform input:focus,\r\nform form input:focus:focus {\r\n    outline: none;\r\n}\r\n\r\nform button {\r\n    font: inherit;\r\n    padding: 0.25rem 0.5rem;\r\n    border: 1px solid #3b013b;\r\n    background: #3b013b;\r\n    color: white;\r\n    cursor: pointer;\r\n}\r\n\r\nform button:hover,\r\nform button:active {\r\n    background: #750175;\r\n    border-color: #750175;\r\n}\r\n\r\nform button:disabled {\r\n    background: #ccc;\r\n    border: #ccc;\r\n    color: white;\r\n    cursor: not-allowed;\r\n}\r\n\r\nul {\r\n    margin: 0;\r\n    list-style: none;\r\n}\r\n\r\nli {\r\n    margin: 0.25rem 0;\r\n    padding: 0.25rem;\r\n    border: 1px solid #ccc;\r\n    cursor: pointer;\r\n}\r\n\r\nli:hover,\r\nli:active {\r\n    background: var(--color-primary, black);\r\n    color: var(--color-primary-inverse, white);\r\n\r\n}","import { Component, Event, EventEmitter, State, h } from \"@stencil/core\";\r\n\r\nimport { AV_API_KEY } from '../../global/global';\r\n\r\n@Component({\r\n    tag: 'wc-stock-finder',\r\n    styleUrl: './index.css',\r\n    shadow: true,\r\n})\r\nexport class StockFinder {\r\n\r\n    stockNameInput: HTMLInputElement;\r\n\r\n    @State() searchResults: { symbol: string, name: string}[] = [];\r\n    @State() loading: boolean = false;\r\n\r\n    @Event({bubbles: true, composed: true }) wcSymbolSelected: EventEmitter<string>;\r\n\r\n    onFindStocks(e: Event) {\r\n        e.preventDefault();\r\n        this.loading = true;\r\n        const stockName = this.stockNameInput.value;\r\n        fetch(`https://www.alphavantage.co/query?function=SYMBOL_SEARCH&keywords=${stockName}&apikey=${AV_API_KEY}`)\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            // console.log('res', res)\r\n            this.searchResults = res.bestMatches.map(row => {\r\n                return {name: row['2. name'], symbol: row['1. symbol']};\r\n            });\r\n            this.loading = false;\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n            this.loading = false;\r\n        })\r\n    }\r\n\r\n    onSelectSymbol(symbol: string) {\r\n        // console.log(symbol)\r\n        this.wcSymbolSelected.emit(symbol);\r\n    }\r\n\r\n    render() {\r\n        let content = <ul>\r\n                {this.searchResults.map(row =>\r\n                    <li onClick={this.onSelectSymbol.bind(this, row.symbol)}><strong>{row.symbol}</strong> - {row.name}</li>\r\n                )}\r\n            </ul>;\r\n        if (this.loading) content = <wc-spinner></wc-spinner>;\r\n        \r\n        return [\r\n            <form onSubmit={this.onFindStocks.bind(this)}>\r\n                <input id=\"stock-symbol\" type=\"text\" ref={el => this.stockNameInput = el} />\r\n                <button type=\"submit\" >Find!</button>\r\n            </form>,\r\n            content\r\n        ];\r\n    }\r\n}",":host {\r\n    font-family: sans-serif;\r\n    border: 2px solid var(--color-primary, black);\r\n    margin: 2rem;\r\n    padding: 1rem;\r\n    display: block;\r\n    width: 20rem;\r\n    max-width: 100%;\r\n}\r\n\r\n:host(.error) {\r\n    border-color: rgb(235, 153, 0);\r\n}\r\n\r\nform input {\r\n    font: inherit;\r\n    color: var(--color-primary, black);\r\n    padding: 0.1rem 0.25rem;\r\n    margin-bottom: 0.5rem;\r\n}\r\n\r\nform input:focus,\r\nform form input:focus:focus {\r\n    outline: none;\r\n}\r\n\r\nform button {\r\n    font: inherit;\r\n    padding: 0.25rem 0.5rem;\r\n    border: 1px solid var(--color-primary, black);\r\n    background: var(--color-primary, black);\r\n    color: var(--color-primary-inverse, white);\r\n    cursor: pointer;\r\n}\r\n\r\nform button:hover,\r\nform button:active {\r\n    background: var(--color-primary-highlight, grey);\r\n    border-color: var(--color-primary-highlight, grey);\r\n}\r\n\r\nform button:disabled {\r\n    background: #ccc;\r\n    border: #ccc;\r\n    color: white;\r\n    cursor: not-allowed;\r\n}\r\n","import { Component, Element, Listen, Prop, State, Watch, h } from \"@stencil/core\";\r\nimport { AV_API_KEY } from '../../global/global';\r\n\r\n@Component({\r\n    tag: 'wc-stock-price',\r\n    styleUrl: './index.css',\r\n    shadow: true,\r\n})\r\nexport class StockPrice {\r\n    // Es mas facil inicializar variables y estas seran las referencia al componente ref={ el => this.myAttr = el}\r\n    stockInput: HTMLInputElement;\r\n    // initialStockSymbol: string;\r\n\r\n    // Decorador para acceder al elemento adyacente lo equivalente a :host() {} en CSS, considerando si tiene el shadow activo\r\n    @Element() el:  HTMLElement\r\n\r\n    @State() fetchedPrice: number;\r\n    @State() stockUserInput: string;\r\n    @State() stockInputValid:boolean = false;\r\n    @State() error: string;\r\n    @State() loading: boolean = false;\r\n\r\n    // los props en notacion cammelCase deben ser atributos con nombres separados por guin medio en el componente\r\n    // Ejemplo \"stock-symbol\"\r\n    @Prop({ mutable:true, reflect: true }) stockSymbol: string;\r\n\r\n    // establece un observador para este Prop::stockSymbol para ejecutar el metodo cuando cambia la misma\r\n    // Este pasa al metodo el valor nuevo y anterior del mismo tipo definido \r\n    @Watch('stockSymbol')\r\n    stockSymbolChanged(newValue: string, oldValue: string) {\r\n        if (newValue != oldValue) {\r\n            this.stockUserInput = newValue;\r\n            this.stockInputValid = true;\r\n            this.fetchStockPrice(newValue);\r\n        }\r\n    }\r\n\r\n    onUserInput(e: Event) {\r\n        this.stockUserInput = (e.target as HTMLInputElement).value;\r\n        this.stockInputValid = this.stockUserInput.trim() !== '';\r\n    }\r\n\r\n    onFecthStockPrice(e: Event) {\r\n        e.preventDefault();\r\n\r\n        // Forma INCORRECTA de acceder al valor, por que TS detecta que no todos los elementos HTMl pueden tener este atributo\r\n        // Y tambien por que al estar activo el shodow dom debemos acceder al atributo mediante el shadowRoot\r\n        //this.el.querySelector('#stock-symbol').value;\r\n        // FORMA CORRECTA, es decir que tipo de elemento es\r\n        // const stockSymbol = (this.el.shadowRoot.querySelector('#stock-symbol') as HTMLInputElement).value\r\n\r\n        this.stockSymbol = this.stockInput.value;\r\n        // this.fetchStockPrice(stockSymbol); // Ya no es necesario por que al actualizar el valor se ejecuta el codigo del metodo stockSymbolChanged\r\n    }\r\n\r\n    // metodo ciclo de vida de componente stencil: Cuando el componente esta por cargarse\r\n    componentWillLoad() {\r\n        console.log('componentWillLoad', this.stockSymbol);\r\n        this.fetchedPrice = 0;\r\n\r\n    }\r\n\r\n    // metodo ciclo de vida de componente stencil: cuando este se carga en el DOM\r\n    componentDidLoad() {\r\n        console.log('componentDidLoad');\r\n        if (this.stockSymbol) {\r\n            // this.initialStockSymbol = this.stockSymbol;\r\n            this.stockUserInput = this.stockSymbol;\r\n            this.stockInputValid = true;\r\n            this.fetchStockPrice(this.stockSymbol);\r\n        }\r\n    }\r\n\r\n    // metodo ciclo de vida de componente stencil: se activa antes de procesar una actualizacion del componente \r\n    componentWillUpdate() {\r\n        console.log('componentWillUpdate');\r\n    }\r\n\r\n    // metodo ciclo de vida de componente stencil: se activa cuando se actualiza el componente\r\n    componentDidUpdate() {\r\n        console.log('componentDidUpdate');\r\n        // if(this.stockSymbol !== this.initialStockSymbol) {\r\n        //     this.initialStockSymbol = this.stockSymbol;\r\n        //     this.fetchStockPrice(this.stockSymbol);\r\n        // }\r\n    }\r\n\r\n    // metodo ciclo de vida de componente stencil: cuando el componente es removido del DOM\r\n    // antes llamado => componentDidUnload()\r\n    disconnectedCallback() {\r\n        console.log('disconnectedCallback');\r\n    }\r\n\r\n    // Decorador para escuchar cualquier evento, recive como argumento el nombre del evento a captar para ejecutar el metodo\r\n    // @Listen('wcSymbolSelected') // => de esta manera escucha eventos dentro del componente que esta en el shadow DOm\r\n    @Listen('wcSymbolSelected', {target: 'body'}) // => esta forma se especifica a que nivel debe de escuchar loe eventos\r\n    onStockSymbolSelected(e: CustomEvent) {\r\n        // console.log('onStockSymbolSelected::wcSymbolSelected')\r\n        if (e.detail && e.detail !== this.stockSymbol) {\r\n            // stockSymbol tienen un watcher para ejecutar un metodo al modificar este valor de esta propiedad\r\n            this.stockSymbol = e.detail;\r\n        }\r\n    }\r\n\r\n    fetchStockPrice(stockSymbol: string) {\r\n        this.loading = true;\r\n        fetch(`https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${stockSymbol}&apikey=${AV_API_KEY}`)\r\n        .then(res => {\r\n            if (res.status !== 200) throw new Error('Invalid!');\r\n            return res.json();\r\n        })\r\n        .then( res => {\r\n            if (!res['Global Quote']['05. price']) throw new Error('Invalid Symbol!!');\r\n            this.error = '';\r\n            this.fetchedPrice = +res['Global Quote']['05. price']; // se castea a number\r\n            this.loading = false;\r\n        })\r\n        .catch(err => {\r\n            // console.log(err)\r\n            this.error = err.message;\r\n            this.fetchedPrice = null;\r\n            this.loading = false;\r\n        })\r\n        ;\r\n    }\r\n\r\n    // Metodo stencil que ayuda a manimular atributos del componente mismo, retornand un objeto de los mismos!\r\n    hostData() {\r\n        // REVISAR por que no se esta retornando por si solo la clase: hydrated del componente\r\n        return { class: this.error ? 'error hydrated': 'hydrated'};\r\n    }\r\n\r\n    render() {\r\n        let dataContent = <p>Please enter a symbol</p>;\r\n        if (this.error) dataContent = <p>{this.error}</p>;\r\n        if (this.fetchedPrice) dataContent = <p>Price: ${this.fetchedPrice}</p>;\r\n        if (this.loading) dataContent = <wc-spinner></wc-spinner>;\r\n\r\n        return [\r\n            <form onSubmit={this.onFecthStockPrice.bind(this)}>\r\n                <input id=\"stock-symbol\" type=\"text\" \r\n                    ref={el => this.stockInput = el} \r\n                    value={this.stockUserInput}\r\n                    onInput={this.onUserInput.bind(this)} // note: https://www.w3schools.com/tags/ev_oninput.asp\r\n                />\r\n                <button type=\"submit\" disabled={!this.stockInputValid || this.loading}>Fetch</button>\r\n            </form>,\r\n            <div>\r\n                {dataContent}\r\n            </div>\r\n        ];\r\n    }\r\n}"],"mappings":"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"}